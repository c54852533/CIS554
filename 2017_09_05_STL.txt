//standard template library
//vector, list, stack, queue
#include <iostream>
#include <fstream>
#include <vector>
#include <list>
#include <stack>
#include <queue>

using namespace std;

int main() {
	
	int array_size;
	array_size = 100;

	//int AA[array_size];  error.  array size has to be a constant

	int * AA1 = new int[array_size];
	AA1[45] = 34;


	vector<int> V1(10, 1);
	V1.push_back(23); //add a new number 23 to the back of V1
	V1.pop_back(); //remove the last number of V1
	cout << V1[5];//supports index (random access)
	cout << V1.size();
	V1.resize(8);
	for (size_t i = 0; i < V1.size(); i++) //size_t is non-negative int
		cout << V1[i] << " ";
	cout << endl;
	vector<int>::iterator it1 = V1.begin();
	while (it1 != V1.end()) {
		cout << *it1 << " ";
		it1++;
	}
	//begin() returns the location of the first element
	//end() returns the locaiton after the last element

	vector<int> V2 = { 2,5,8,6,7 };//vector 5 elements with the specified values
	list<int> L1 = { 11,2,4,6,9 };
	L1.push_back(88);
	L1.pop_back();
	L1.push_front(22);
	L1.pop_front();
	list<int>::iterator it2 = L1.begin();
	while (it2 != L1.end()) {
		cout << *it2 << " ";
		it2++;
	}
	stack<int> S1;
	S1.push(5);
	S1.push(7);
	S1.push(66);
	cout << S1.top() << endl;
	S1.pop();
	cout << S1.size() << endl;

	queue<int> Q1;





	getchar();
	getchar();
	return 0;
}